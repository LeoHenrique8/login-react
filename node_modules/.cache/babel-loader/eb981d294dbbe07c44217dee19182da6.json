{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Development/login-react/src/contexts/auth.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { api, createSession } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const recoveredUser = localStorage.getItem(\"user\");\n    const token = localStorage.getItem(\"token\");\n\n    if (recoveredUser && token) {\n      setUser(JSON.parse(recoveredUser));\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n    }\n\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    const response = await createSession(email, password);\n    console.log(\"login\", response.data);\n    const loggedUser = response.data.user;\n    const token = response.data.token;\n    localStorage.setItem(\"user\", JSON.stringify(loggedUser));\n    localStorage.setItem(\"token\", token);\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n    setUser(loggedUser);\n    navigate(\"/\");\n  };\n\n  const logout = () => {\n    console.log(\"logout\");\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n    api.defaults.headers.Authorization = null;\n    setUser(null);\n    navigate(\"/login\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authenticated: !!user,\n      user,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"bMs6vkxBNdJdvAQTZITyVwx4nss=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/leonardo/Development/login-react/src/contexts/auth.jsx"],"names":["React","useState","useEffect","createContext","useNavigate","api","createSession","AuthContext","AuthProvider","children","navigate","user","setUser","loading","setLoading","recoveredUser","localStorage","getItem","token","JSON","parse","defaults","headers","Authorization","login","email","password","response","console","log","data","loggedUser","setItem","stringify","logout","removeItem","authenticated"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,GAAT,EAAcC,aAAd,QAAmC,iBAAnC;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEP,OAAO,MAAMK,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAtB;AACA,UAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAIF,aAAa,IAAIG,KAArB,EAA4B;AAC1BN,MAAAA,OAAO,CAACO,IAAI,CAACC,KAAL,CAAWL,aAAX,CAAD,CAAP;AACAV,MAAAA,GAAG,CAACgB,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASL,KAAM,EAArD;AACD;;AAEDJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMU,KAAK,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AACvC,UAAMC,QAAQ,GAAG,MAAMrB,aAAa,CAACmB,KAAD,EAAQC,QAAR,CAApC;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,QAAQ,CAACG,IAA9B;AAEA,UAAMC,UAAU,GAAGJ,QAAQ,CAACG,IAAT,CAAcnB,IAAjC;AACA,UAAMO,KAAK,GAAGS,QAAQ,CAACG,IAAT,CAAcZ,KAA5B;AAEAF,IAAAA,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6Bb,IAAI,CAACc,SAAL,CAAeF,UAAf,CAA7B;AACAf,IAAAA,YAAY,CAACgB,OAAb,CAAqB,OAArB,EAA8Bd,KAA9B;AAEAb,IAAAA,GAAG,CAACgB,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASL,KAAM,EAArD;AAEAN,IAAAA,OAAO,CAACmB,UAAD,CAAP;AACArB,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAfD;;AAiBA,QAAMwB,MAAM,GAAG,MAAM;AACnBN,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEAb,IAAAA,YAAY,CAACmB,UAAb,CAAwB,MAAxB;AACAnB,IAAAA,YAAY,CAACmB,UAAb,CAAwB,OAAxB;AAEA9B,IAAAA,GAAG,CAACgB,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAqC,IAArC;AAEAX,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,GAVD;;AAYA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAE0B,MAAAA,aAAa,EAAE,CAAC,CAACzB,IAAnB;AAAyBA,MAAAA,IAAzB;AAA+BE,MAAAA,OAA/B;AAAwCW,MAAAA,KAAxC;AAA+CU,MAAAA;AAA/C,KADT;AAAA,cAGGzB;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArDM;;GAAMD,Y;UACMJ,W;;;KADNI,Y","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport { api, createSession } from \"../services/api\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const recoveredUser = localStorage.getItem(\"user\");\n    const token = localStorage.getItem(\"token\");\n\n    if (recoveredUser && token) {\n      setUser(JSON.parse(recoveredUser));\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n    }\n\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    const response = await createSession(email, password);\n\n    console.log(\"login\", response.data);\n\n    const loggedUser = response.data.user;\n    const token = response.data.token;\n\n    localStorage.setItem(\"user\", JSON.stringify(loggedUser));\n    localStorage.setItem(\"token\", token);\n\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n\n    setUser(loggedUser);\n    navigate(\"/\");\n  };\n\n  const logout = () => {\n    console.log(\"logout\");\n\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n\n    api.defaults.headers.Authorization = null;\n\n    setUser(null);\n    navigate(\"/login\");\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ authenticated: !!user, user, loading, login, logout }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}